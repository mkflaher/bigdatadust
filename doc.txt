RUC/RAP Data
Source: https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/rapid-refresh-rap
File format: .grb2 (GRIB2 gridded binary)
################################################################################
About: The data for the RUC model exists in the World Meteorological Organization's GRIdded Binary (GRIB) format.The GRIB format contains a header and binaries. The header provides information about the data stored in the file, while the binaries contain the actual weather data. For each recorded weather parameter, a grid of values is stored corresponding for each geographical location. RAP and RUC are forcast models recorded at a time resolution of 1 hour (24 updates daily). The resolutions provided by NOMADS (NOAA Operational Model Archive and Disribution System) include 13km and 25.2km.
The data is located on yifan@joker:REU_SEAN_FLAHERTY/dust/gribs
################################################################################
Retrieving RAP/RUC data:
RUC and RAP are available via HTTPS and FTP. To download the data, GNU wget is used. The following command, for instance, will retrieve 13km RUC data:
	wget -r -np -nd -A 'ruc2anl_130_*.grb2' -e robots=off https://nomads.ncdc.noaa.gov/data/rucanl/ 
The precise command used was:
	wget -r -np -nd -A 'ruc2anl_1380_*_1800_000.grb2' -e robots=off https://nomads.ncdc.noaa.gov/data/rucanl/ 
 to only grab the data at 1800GMT of any day.

Each filename is formatted as such:
(rap/ruc2anl)_(130/252)_YYYYMMDD_hhmm_xxx.grb(2)
################################################################################
Processing RAP/RUC data:
The files retrieved from the repository are processed using the pygrib Python library. Requirements include Python 2.4 or later, numpy, pyproj/matplotlib basemap, and the GRIB API C library.
Any Python code listed in this documentation will assume you have this line at the top of the script:
	import pygrib as pg
To create a file iterator object, use:
	grbs = pg.open(filename), where filename is the name of the file you wish to open.

In order to get a data entry from a file, it is listed in the (non)dustentries.csv file as:

filename,latIndex,lonIndex

where the indices are converted from geographic coordintes using coord.py.
